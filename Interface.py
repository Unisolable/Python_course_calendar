"""
–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–π—Ç–∏ –ø–æ –ª–æ–≥–∏–Ω—É-–ø–∞—Ä–æ–ª—é –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞ —Ç–∞–∫ –∂–µ –≤—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞).
–ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å, —É–∑–Ω–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è, —Å–æ–±—ã—Ç–∏—è –∏–∑ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏.
–°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ.
–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç—É–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
–ï—Å–ª–∏ –Ω–∞—Å –¥–æ–±–∞–≤–∏–ª–∏ –≤ —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ —É–¥–∞–ª–∏–ª–∏ –º—ã –ø–æ–ª—É—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
"""

import asyncio
import re, json, hashlib, pymsgbox
import Outerface
pymsgbox.prompt = Outerface._promptTkinter
import pandas as pd
from Backend import Backend as BND
from User import User as USR
from Calendar import Calendar as CLR
from Calendar import Calendar_specs
from Event import Event as EVN
from datetime import datetime, timedelta
dt_fr_iso = datetime.fromisoformat
uid, cln, evn, login, unotes, notes_breaker = None, None, None, None, None, None

class Interface:
    def __new__(cls, *args, **kwargs): pass  # –ó–∞–≥–ª—É—à–∫–∞ –°–¢–ê–¢–ò–ß–ï–°–ö–û–ì–û –∫–ª–∞—Å—Å–∞ Interface #

    @staticmethod
    def save_as_csv():
        """–ë—ç–∫–∞–ø –≤—Å–µ–π —Å–µ—Å—Å–∏–∏ –ë—ç–∫—ç–Ω–¥–∞"""
        BND.save_as_csv()
        BND.save_notes_as_json()

    @staticmethod
    def recover_from_csv(file='users.csv'):
        """–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ users.csv —á–µ—Ä–µ–∑ DataFrame Pandas"""
        Calendar_specs()
        try:
            users = pd.read_csv(file, encoding='windows-1251')
            # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            ulpce = pd.DataFrame(users[['userid', 'login', 'pswrd', 'lstvs']].groupby(['userid', 'login', 'pswrd',
                                                                                       'lstvs'])).values
            [USR(i[0][1], i[0][2], i[0][0], csv=1, lstvs=i[0][3]) for i in ulpce]
            # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            ulpce = pd.DataFrame(users[['userid', 'calendars']].groupby(['userid', 'calendars'])).values
            [BND._users[i[0][0]].add_calendar(i[0][1]) for i in ulpce]
            # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            ulpce = pd.DataFrame(users[['userid', 'calendars', 'events']].
                                 groupby(['userid', 'calendars', 'events'])).values
            for i in ulpce:
                j = json.JSONDecoder(strict=False).decode(i[0][2])
                uvn = BND._users[i[0][0]]._calendars[i[0][1]].add_event(j['_name'], j['_descript'],
                                                                        j['_dates'][0], j['_dates'][1], j['_period'])
                uvn._users.extend(j['_users'])
                if uvn._users[0] != '':
                    for lgn in uvn._users:
                        BND._users[BND._lgdct[lgn]]._calendars[i[0][1]]._shared.append([uvn, i[0][0]])
            testcsv = 'consistency'
        except: pass
        try:
            BND.read_notes_from_json()
        except: pass
        return testcsv if testcsv else ''

    @staticmethod
    async def notes_from_json():
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        global uid, login, unotes, notes_breaker
        while True:
            allevn = []
            if notes_breaker != 1:
                try:
                    # —Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –≤ –æ–¥–∏–Ω —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                    for cln in BND._users[uid]._calendars.values():
                        allevn.extend(cln._events)
                        [allevn.append(cln._shared[i][0]) for i in range(len(cln._shared))]
                    for eid in allevn:
                        # –ë–∞–∑–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞—Ç –æ—á–µ—Ä–µ–¥–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                        # –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ —Ö–æ–¥–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–∂–∏–¥–∞–Ω–∏–π
                        if eid in BND._eidch.keys():
                            if BND._eidch[eid] < datetime.now() and dt_fr_iso(eid._dates[1]) < datetime.now():
                                BND._notes[uid].append(f'–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: <{eid._name}> '
                                                       f'–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: '
                                                       f'{datetime.now().strftime('%d.%m.%Y  %H:%M')}\n')
                                next_check = (BND._eidch[eid] +
                                              timedelta(minutes=EVN._specs[eid._period[0]][1] / quantifier))
                                del BND._eidch[eid]
                                BND._eidch[eid] = next_check
                        # –°—Ç–∞—Ä—Ç–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞ –º–æ–º–µ–Ω—Ç –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
                        quantifier = int(eid._period[1:]) if eid._period[1:] != '' else 1
                        if ((notes_breaker is None and ((dt_fr_iso(eid._dates[0]) +
                            timedelta(minutes = EVN._specs[eid._period[0]][1] / quantifier)) < datetime.now())) and
                            (dt_fr_iso(eid._dates[1]) < datetime.now() or ((dt_fr_iso(BND._users[uid]._lstvs) +
                            timedelta(minutes = EVN._specs[eid._period[0]][1] / quantifier)) < datetime.now()))):
                            BND._notes[uid].append(f'–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: <{eid._name}> –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: '
                                                   f'{dt_fr_iso(eid._dates[1]).strftime('%d.%m.%Y  %H:%M')}\n')
                        # –§–∏–∫—Å–∞—Ü–∏—è –¥–∞—Ç—ã –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                        if EVN._specs[eid._period[0]][1] != 0:
                            next_check = (dt_fr_iso(eid._dates[0]) +
                                  timedelta(minutes = int((datetime.now() - dt_fr_iso(eid._dates[0])) /
                                                          timedelta(minutes = (EVN._specs[eid._period[0]][1] /
                                                                               quantifier))) *
                                                      (EVN._specs[eid._period[0]][1] / quantifier) +
                                                      (EVN._specs[eid._period[0]][1] / quantifier)))
                            BND._eidch[eid] = next_check
                    # –í—ã–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Å–µ—Ö —Ç–µ–∫—É—â–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                    if len(BND._notes[uid]) > 1:
                        pymsgbox.rootWindowPosition = '+450+90'
                        if notes_breaker is None:
                            unotes = pymsgbox.confirm(f'{''.join([BND._notes[uid][i]
                                                                  for i in range(1, len(BND._notes[uid]))])}',
                                                      f'–°–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π {login}:',
                                                      ['–û–∫–µ–π –Ω–∞!', '–ü–æ—Ç–æ–º –Ω–∞!'])
                            notes_breaker = 0
                        else:
                            unotes = pymsgbox.confirm(f'{''.join([BND._notes[uid][i]
                                                                  for i in range(1, len(BND._notes[uid]))])}',
                                                      f'–°–ø–∏—Å–æ–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {login}:',
                                                      ['–û–∫–µ–π –Ω–∞!', '–ü–æ—Ç–æ–º –Ω–∞!'])
                    elif len(BND._notes[uid]) == 1:
                        if notes_breaker is None:
                            unotes = pymsgbox.confirm(f'{''.join([BND._notes[uid][0]])}',
                                                      f'–°–ø–∏—Å–æ–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {login}:',
                                                      ['–û–∫–µ–π –Ω–∞!', '–ü–æ—Ç–æ–º –Ω–∞!'])
                            notes_breaker = 0

                    if unotes == '–ü–æ—Ç–æ–º –Ω–∞!' or unotes is None: pass
                    else:
                        del BND._notes[uid]
                        BND._notes[uid] = ['–ù–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n']

                    await asyncio.sleep(0.1)
                except:
                    await asyncio.sleep(0.1)
            else: break

    @staticmethod
    def add_user(lgn, pwd):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        global uid
        USR(lgn, pwd)
        BND._notes[uid] = ['–ù–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n']

    @staticmethod
    def del_user(uid):
        """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        global login
        del BND._lgdct[login]
        del BND._users[uid]
        del BND._notes[uid]

    @staticmethod
    def add_calendar(uid, cln):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        global login
        pymsgbox.rootWindowPosition = '420x110+450+150'
        if cln not in BND._users[uid]._calendars.keys():
            BND._users[uid].add_calendar(cln)
            add_conf = pymsgbox.confirm(f'{CLR._specs[cln][1]} –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {login}\n',
                                        f'–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è üíòüíòüíò', ['–£—Ä–∞-–£—Ä–∞!'])
        else:
            cln_error = pymsgbox.confirm(f'–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –∫–∞–ª–µ–Ω–¥–∞—Ä—è —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è >>>\n{cln} - {CLR._specs[cln][1]}',
                                         f'–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è ‚ò¢‚ò¢‚ò¢', ['–°–æ—Ä—è–Ω!'])

    @staticmethod
    def del_calendar(uid, cln):
        """–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        global login
        pymsgbox.rootWindowPosition = '410x110+450+150'
        if cln in BND._users[uid]._calendars.keys():
            BND._users[uid].del_calendar(cln)
            def_conf = pymsgbox.confirm(f'{CLR._specs[cln][1]} {login} —É–¥–∞–ª—ë–Ω ‚úû‚úû‚úû\n',
                                        f'–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Å–º–µ—Ä—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è ‚ò†‚ò†‚ò†', ['–ü–æ–º—è–Ω–µ–º –Ω–∞!'])

    @staticmethod
    def add_event(uid, cln, name, descript, start, end, per='0'):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        BND._users[uid]._calendars[cln].add_event(name, descript, start, end, per)

    @staticmethod
    def del_event(uid, cln, eid):
        """–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        delevn = BND._users[uid]._calendars[cln]._events[eid]._name
        BND._users[uid]._calendars[cln].del_event(eid)
        pymsgbox.rootWindowPosition = '430x120+450+150'
        def_conf = pymsgbox.confirm(f'–°–æ–±—ã—Ç–∏–µ <{delevn}> —É–¥–∞–ª—ë–Ω–æ –∏–∑ '
                                    f'–í–∞—à–µ–≥–æ {CLR._specs[cln][2]}\n',
                                    f'–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Å–º–µ—Ä—Ç–∏ —Å–æ–±—ã—Ç–∏—è ‚ò†‚ò†‚ò†', ['–ü–æ–º—è–Ω–µ–º –Ω–∞!'])

    @staticmethod
    def find_event(uid, start, end):
        """–ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π –≤–æ –≤—Å–µ—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª—É –¥–∞—Ç"""
        return CLR.find_by_date(uid, start, end)

    @staticmethod
    def add_event_users(uid, cln, eid, uvn):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Å–æ–±—ã—Ç–∏—é –∫–∞–ª–µ–Ω–¥–∞—Ä—è"""
        BND._users[uid]._calendars[cln]._events[eid].add_user(uid, cln, uvn)
        pymsgbox.rootWindowPosition = '440x115+450+150'
        add_conf = pymsgbox.confirm(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {uvn} –¥–æ–±–∞–≤–ª–µ–Ω –∫ —Å–æ–±—ã—Ç–∏—é '
                                    f'<{BND._users[uid]._calendars[cln]._events[eid]._name}> '
                                    f'–í–∞—à–µ–≥–æ {CLR._specs[cln][2]}\n',
                                    f'–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üíòüíòüíò', ['–£—Ä–∞-–£—Ä–∞!'])

    @staticmethod
    def del_event_users(uid, cln, eid, uvn):
        """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–±—ã—Ç–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è"""
        BND._users[uid]._calendars[cln]._events[eid].del_user(uid, cln, uvn)
        pymsgbox.rootWindowPosition = '430x120+450+150'
        add_conf = pymsgbox.confirm(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {uvn} —É–¥–∞–ª—ë–Ω –∏–∑ —Å–æ–±—ã—Ç–∏—è '
                                    f'<{BND._users[uid]._calendars[cln]._events[eid]._name}> '
                                    f'–í–∞—à–µ–≥–æ {CLR._specs[cln][2]}\n',
                                    f'–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚ò†‚ò†‚ò†', ['–ü–æ–º—è–Ω–µ–º –Ω–∞!'])

    @staticmethod
    def del_self_from_event_users(uid, cln, eid):
        """–£–¥–∞–ª–µ–Ω–∏–µ —Å–µ–±—è –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ–±—ã—Ç–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è"""
        global login
        devn = BND._users[uid]._calendars[cln]._shared[eid][0]._name
        devl = BND._users[uid]._calendars[cln]._shared[eid][1]
        BND._users[uid]._calendars[cln]._shared[eid][0]._users.remove(login)
        del BND._users[uid]._calendars[cln]._shared[eid]
        pymsgbox.rootWindowPosition = '460x120+450+150'
        def_conf = pymsgbox.confirm(f'–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ —Å–æ–±—ã—Ç–∏–µ <{devn}> {CLR._specs[cln][2]} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '
                                    f'{BND._users[devl]._login}?\n',
                                    f'–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ —Å–µ–±—è –∏–∑ —Å–æ–±—ã—Ç–∏—è ‚ò†‚ò†‚ò†', ['–ü–æ–º—è–Ω–µ–º –Ω–∞!'])

    @staticmethod
    async def intface_mode():
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–æ–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        global uid, login, cln, evn, unotes, notes_breaker
        login, newuser = None, False

        while True:
            # –ò–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                if not newuser or newuser == '–î–∞–Ω—É –Ω–∞!':
                    login, pswrd = pymsgbox.prompt('–ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ª–æ–≥–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'
                                                   ' –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n\n'
                                                   '–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è >>>', '–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É :))', dtntr=1)
                else: pass
            except: pass

            if login is None:
                notes_breaker = 1
                break
            elif login == '': login = None
            elif login in BND._lgdct.keys():

                # –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
                if hashlib.md5(pswrd.encode()).hexdigest() == BND._users[BND._lgdct[login]]._pswrd:
                    uid = BND._lgdct[login]
                    BND._curid['login'] = login
                    BND._curid['uid'] = uid

                    while True:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–±–æ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        await asyncio.sleep(0.1)
                        notes_breaker = 0
                        BND._users[uid]._lstvs = datetime.now().strftime('%Y-%m-%dT%H:%M:%S')
                        # –í—ã–≤–æ–¥–∏–º –º–µ–Ω—é –±–∞–∑–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
                        interface = pymsgbox.prompt('‚Æö –í–≤–µ–¥–∏—Ç–µ 1 –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è >>>\n'
                                                    '‚Æö –í–≤–µ–¥–∏—Ç–µ 2 –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è >>>\n'
                                                    '‚Æö –í–≤–µ–¥–∏—Ç–µ 3 –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π –ø–æ –¥–∞—Ç–∞–º >>>\n'
                                                    '‚Æö –í–≤–µ–¥–∏—Ç–µ 4 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è >>>\n'
                                                    '‚Æö –í–≤–µ–¥–∏—Ç–µ 5 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è >>>\n\n'
                                                    '<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã >>>\n',
                                                    '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ :))', clntr=2)

                        # –í–≤–µ–¥–∏—Ç–µ 1 –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è >>>
                        if interface is None:
                            login, uid, newuser, notes_breaker = None, None, False, None
                            break
                        elif interface == '': continue
                        elif interface == '1':
                            await asyncio.sleep(0.1)
                            while True:
                                cln = pymsgbox.prompt(f'{''.join([str(i[0]) + ' - ' + CLR._specs[i[0]][1] + '\n' 
                                                                  for i in BND._users[uid]._calendars.items()])}\n'
                                                      '<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                                      '‚Æö –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –µ–≥–æ —Å–æ–±—ã—Ç–∏–π',
                                                      '–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–±—ã—Ç–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π :))')
                                try:
                                    if cln is None: break
                                    elif cln == '': continue
                                    elif int(cln) in range(1, 6) and int(cln) in BND._users[uid]._calendars.keys():
                                        cln = int(cln)
                                        BND._curid['login'] = login
                                        BND._curid['uid'] = uid
                                        BND._curid['cln'] = cln
                                        await Interface.event_checker()
                                except: pass

                        # –í–≤–µ–¥–∏—Ç–µ 2 –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è >>>
                        elif interface == '2':
                            await asyncio.sleep(0.1)
                            while True:
                                cln = pymsgbox.prompt(f'{''.join([str(i[0]) + ' - ' + i[1][1] + '\n' 
                                                                  for i in CLR._specs.items()])}\n'
                                                      '<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                                      '‚Æö –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω–¥–µ–∫—Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è',
                                                      '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è :))')
                                try:
                                    if cln is None: break
                                    elif cln == '': continue
                                    elif int(cln) in range(1, 5): Interface.add_calendar(uid, int(cln))
                                except: pass

                        # –í–≤–µ–¥–∏—Ç–µ 3 –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π –ø–æ –¥–∞—Ç–∞–º >>>
                        elif interface == '3':
                            await asyncio.sleep(0.1)
                            while True:
                                prd = pymsgbox.prompt('<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                                      '‚Æö –í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –¥–∞—Ç –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏–π '
                                                      '–≤ —Ñ–æ—Ä–º–∞—Ç–µ \n–ì–ì–ì–ì-–ú–ú-–î–î –ì–ì–ì–ì-–ú–ú-–î–î',
                                                      '–ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π –ø–æ –¥–∞—Ç–∞–º :))', dtntr=2)
                                if prd is None: break
                                elif prd == '': continue
                                else:
                                    efn = Interface.find_event(uid, prd[0], prd[1])
                                    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ –¥–∞—Ç–∞–º —Å–æ–±—ã—Ç–∏—è
                                    epn = pymsgbox.prompt(
        f'{''.join([''.join([str(str(efn.index(j) + 1) + '. '), str(j[2]._name + ': '), j[2]._descript, ' ===\n',
                             str('–Ω–∞—á–∞–ª–æ: ' + dt_fr_iso(j[2]._dates[0]).strftime('%d.%m.%Y  %H:%M')), ' >>> ',
                             str('–∫–æ–Ω–µ—Ü: ' + dt_fr_iso(j[2]._dates[1]).strftime('%d.%m.%Y  %H:%M')), '\n',
                             '–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ - ', EVN._specs[j[2]._period[0]][0], '\n']) for j in efn if j[3] == 'own'])}\n'
        f'\n–°–æ–±—ã—Ç–∏—è –∏–∑ —á—É–∂–∏—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π, —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–æ—Ç–æ—Ä—ã—Ö –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å:\n'
        f'{''.join([''.join([str(str(efn.index(j) + 1) + '. '), str(j[2]._name + ': '), j[2]._descript, ' ===\n',
                             str('–Ω–∞—á–∞–ª–æ: ' + dt_fr_iso(j[2]._dates[0]).strftime('%d.%m.%Y  %H:%M')), ' >>> ',
                             str('–∫–æ–Ω–µ—Ü: ' + dt_fr_iso(j[2]._dates[1]).strftime('%d.%m.%Y  %H:%M')), '\n',
                             '–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ - ', EVN._specs[j[2]._period[0]][0], '\n']) for j in efn if j[3] == 'shr'])}\n'
        '<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
        '‚Æö –í—ã–±–µ—Ä–∏—Ç–µ –ù–û–ú–ï–† —Å–æ–±—ã—Ç–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞, –∞–≤—Ç–æ—Ä–æ–º –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å, –¥–ª—è –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
        '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ :))')
                                    if epn is None or epn == '': continue
                                    else:
                                        try:
                                            epn = int(epn) - 1
                                            if efn[epn][3] == 'own':
                                                cln = efn[epn][1]
                                                evn = efn[epn][2]
                                                Interface.edit_event(0)
                                        except: pass

                        # –í–≤–µ–¥–∏—Ç–µ 4 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è >>>
                        elif interface == '4':
                            await asyncio.sleep(0.1)
                            while True:
                                cln = pymsgbox.prompt(f'{''.join([str(i[0]) + ' - ' + CLR._specs[i[0]][1] + '\n' 
                                                                  for i in BND._users[uid]._calendars.items()])}\n'
                                                      '<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                                      '‚Æö –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω–¥–µ–∫—Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è',
                                                      '–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è :))')
                                try:
                                    if cln is None: break
                                    elif cln == '': continue
                                    elif int(cln) in range(1, 5): Interface.del_calendar(uid, int(cln))
                                except: pass

                        # –í–≤–µ–¥–∏—Ç–µ 5 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è >>>
                        elif interface == '5':
                            await asyncio.sleep(0.1)
                            while True:
                                ucl = pymsgbox.prompt('<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                                      '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ' +
                                                      BND._users[uid]._login + '\n\n'
                                                      '‚Æö –í–≤–µ–¥–∏—Ç–µ DEL –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è\n'
                                                      '!!! –û–ø–µ—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–æ–±—Ä–∞—Ç–∏–º–∞ !!!',
                                                      '–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è :((')
                                if ucl is None: break
                                elif ucl == '': continue
                                elif ucl == 'DEL':
                                    Interface.del_user(uid)
                                    login, newuser = None, False
                                    break

            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ª–æ–≥–∏–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ
            else:
                pymsgbox.rootWindowPosition = '480x130+450+150'
                newuser = pymsgbox.confirm(f'–ñ–µ–ª–∞–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {login} –≤ —Å–∏—Å—Ç–µ–º–µ?\n'
                                           f'–û—Ç–≤–µ—Ç <–î–∞–Ω—É –Ω–∞!> - –Ω–æ–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –≤–≤–æ–¥–∞\n'
                                           f'<–Ø —Ö–∑!> - –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã',
                                           f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ª–æ–≥–∏–Ω–æ–º {login} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ!',
                                           ['–ù–µ –≤–æ–ø—Ä–æ—Å!', '–î–∞–Ω—É –Ω–∞!', '–Ø —Ö–∑!'])
                if newuser == '–î–∞–Ω—É –Ω–∞!': continue
                elif newuser == '–ù–µ –≤–æ–ø—Ä–æ—Å!': Interface.add_user(login, pswrd)
                else:
                    notes_breaker = 1
                    break
            await asyncio.sleep(0.1)

    @staticmethod
    async def event_checker():
        """–í—ã–≤–æ–¥ —Ç–µ–∫—É—â–µ–≥–æ –Ω–∞–±–æ—Ä–∞ —Å–æ–±—ã—Ç–∏–π –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        global uid, login, cln, evn
        while True:
            shared = ''
            i = len(BND._users[uid]._calendars[cln]._events)
            for j in BND._users[uid]._calendars[cln]._shared:
                shared += str(str(i := i + 1) + '. ' + j[0]._name + ': ' + j[0]._descript + ' ===\n' +
                              '–Ω–∞—á–∞–ª–æ: ' + dt_fr_iso(j[0]._dates[0]).strftime('%d.%m.%Y  %H:%M') + ' >>> ' +
                              '–∫–æ–Ω–µ—Ü: ' + dt_fr_iso(j[0]._dates[1]).strftime('%d.%m.%Y  %H:%M') + '\n' +
                              '–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ - ' + EVN._specs[j[0]._period[0]][0] + '\n')
            if shared == '': shared = '<< o–±—â–∏–µ —Å–æ–±—ã—Ç–∏—è –¥–∞–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç >>\n'
            evn = pymsgbox.prompt(
            f'{''.join([''.join([str(str(BND._users[uid]._calendars[cln]._events.index(j) + 1) + '. '),
                                 str(j._name + ': '), j._descript, ' ===\n',
                                 str('–Ω–∞—á–∞–ª–æ: ' + dt_fr_iso(j._dates[0]).strftime('%d.%m.%Y  %H:%M')), ' >>> ',
                                 str('–∫–æ–Ω–µ—Ü: ' + dt_fr_iso(j._dates[1]).strftime('%d.%m.%Y  %H:%M')), '\n',
                                 '–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ - ', EVN._specs[j._period[0]][0], '\n'])
                        for j in BND._users[uid]._calendars[cln]._events])}\n'
            f'–°–æ–±—ã—Ç–∏—è –∏–∑ —á—É–∂–∏—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π, —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–æ—Ç–æ—Ä—ã—Ö –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å: \n\n{shared}\n'
            '<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
            '‚Æö –í—ã–±–µ—Ä–∏—Ç–µ –ù–û–ú–ï–† —Å–æ–±—ã—Ç–∏—è, –∞–≤—Ç–æ—Ä–æ–º –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å, –∏–∑ –≤–µ—Ä—Ö–Ω–µ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–ª—è –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.\n'
            '‚Æö –ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –ù–ê–ó–í–ê–ù–ò–ï –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å.',
            f'–°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π {CLR._specs[cln][2]} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è :))', clntr=1)
            if evn is None: break
            elif evn == '': continue
            else:
                try:
                    users = ''
                    evn = int(evn) - 1
                    for i in BND._users[uid]._calendars[cln]._events[evn]._users:
                        users += i + ', ' if i != '' else users
                    users = users[:-2] if users[:-2] != '' else '—Ç–æ–ª—å–∫–æ –í—ã üíòüíòüíò'
                    if evn in range(len(BND._users[uid]._calendars[cln]._events)):
                        editevent = pymsgbox.prompt('‚Æö –í–≤–µ–¥–∏—Ç–µ 1 –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è >>>\n'
                                                    '‚Æö –í–≤–µ–¥–∏—Ç–µ 2 –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫ —Å–æ–±—ã—Ç–∏—é –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è >>>\n'
                                                    '‚Æö –í–≤–µ–¥–∏—Ç–µ 3 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —Å–æ–±—ã—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è >>>\n'
                                                    '‚Æö –í–≤–µ–¥–∏—Ç–µ 4 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è >>>\n\n'
                                                    '–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏—è:\n'
                                                    f'<<{BND._users[uid]._calendars[cln]._events[evn]._name}>>:\n'
                                                    f'{users}\n\n<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã >>>\n',
                                                    f'–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Å–æ–±—ã—Ç–∏—è :))',
                                                    default='—É—á–∞—Å—Ç–Ω–∏–∫–∏: ' + users)
                        if editevent == '1':
                            evn = BND._users[uid]._calendars[cln]._events[evn]
                            Interface.edit_event(0)

                        elif editevent == '2':
                            uvn = pymsgbox.prompt('<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                                  f'‚Æö –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ–≥–æ –∫ —Å–æ–±—ã—Ç–∏—é\n'
                                                  f'<{BND._users[uid]._calendars[cln]._events[evn]._name}> '
                                                  f'–í–∞—à–µ–≥–æ {CLR._specs[cln][2]}',
                                                  '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ —Å–æ–±—ã—Ç–∏—é –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è :))')
                            if uvn in BND._lgdct.keys() and uvn != login: Interface.add_event_users(uid, cln, evn, uvn)

                        elif editevent == '3':
                            uvn = pymsgbox.prompt('<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                                  f'‚Æö –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –µ–≥–æ –∏–∑ —Å–æ–±—ã—Ç–∏—è\n'
                                                  f'<{BND._users[uid]._calendars[cln]._events[evn]._name}> '
                                                  f'–í–∞—à–µ–≥–æ {CLR._specs[cln][2]}',
                                                  '–£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å–æ–±—ã—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è :))')
                            if uvn in BND._lgdct.keys() and uvn != login: Interface.del_event_users(uid, cln, evn, uvn)

                        elif editevent == '4':
                            pymsgbox.rootWindowPosition = '420x120+450+150'
                            del_conf = pymsgbox.confirm(f'–°–æ–±—ã—Ç–∏–µ <{BND._users[uid]._calendars[cln]._events[evn]._name}> '
                                                        f'–±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ –∏–∑ {CLR._specs[cln][2]} '
                                                        f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {login}\n',
                                                        f'–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è ‚ò†‚ò†‚ò†',
                                                        ['–û–∫–µ–π –Ω–∞!', '–î–∞ –Ω—É –Ω–∞!'])
                            if del_conf == '–û–∫–µ–π –Ω–∞!': Interface.del_event(uid, cln, evn)
                            else: pass
                except:
                    try:
                        evn = evn - len(BND._users[uid]._calendars[cln]._events)
                        pymsgbox.rootWindowPosition = '450x120+450+150'
                        del_conf = pymsgbox.confirm(f'–ñ–µ–ª–∞–µ—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å —Å–æ–±—ã—Ç–∏–µ '
                                            f'<{BND._users[uid]._calendars[cln]._shared[evn][0]._name}> '
                                            f'{CLR._specs[cln][2]} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '
                                            f'{BND._users[BND._users[uid]._calendars[cln]._shared[evn][1]]._login}?\n',
                                            f'–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–µ–±—è –∏–∑ —Å–æ–±—ã—Ç–∏—è ‚ò†‚ò†‚ò†',
                                            ['–û–∫–µ–π –Ω–∞!', '–î–∞ –Ω—É –Ω–∞!'])
                        if del_conf == '–û–∫–µ–π –Ω–∞!': Interface.del_self_from_event_users(uid, cln, evn)
                    except: Interface.edit_event(1)
        await asyncio.sleep(0.1)

    @staticmethod
    def edit_event(new):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ / –í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        global uid, login, cln, evn
        date_error, time_error = 0, 0
        while True:
            if new == 1:
                descript = pymsgbox.prompt('<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                           f'‚Æö –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è <{evn}>',
                                           '–í–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è :))')
                if descript is None: break
                startup = pymsgbox.prompt('<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                          f'‚Æö –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è <{evn}> –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n'
                                          f'–ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú', '–í–≤–æ–¥ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è :))',
                                          default=datetime.now().strftime('%Y-%m-%d %H:%M'))
            elif new == 0:
                name = pymsgbox.prompt('<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                       f'‚Æö –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è <{evn._name}>',
                                       '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è :))', default=evn._name)
                if name is None: break
                descript = pymsgbox.prompt('<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                           f'‚Æö –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è <{evn._name}>',
                                           '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è :))', default=evn._descript)
                if descript is None: break
                startup = pymsgbox.prompt('<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                          f'‚Æö –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è <{evn._name}> –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n'
                                          f'–ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú', '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è :))',
                                          default=evn._dates[0].split('T')[0] + ' ' + evn._dates[0].split('T')[1][:-3])
            if not startup is None:
                startup = startup.split(' ')
                if not re.search('^([0-9][0-9]|19[0-9][0-9]|20[0-9][0-9])'
                                 '(\\|.|-|_|/)([1-9]|0[1-9]|1[0-2])'
                                 '(\\|.|-|_|/)([1-9]|0[1-9]|1[0-9]|2[0-9]|3[0-1])$', startup[0]) is None:
                    startup[0] = startup[0].replace('.', '-').replace('\\', '-').replace('/', '-').replace('_', '-')
                else:
                    pymsgbox.rootWindowPosition = '420x110+450+150'
                    date_error = pymsgbox.confirm(f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è –ì–ì–ì–ì-–ú–ú-–î–î >>> '
                                                  f'{startup[0]}\n', '–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è ‚ò¢‚ò¢‚ò¢',
                                                  ['–°–æ—Ä—è–Ω!'])
                if re.search('^((([0-1][0-9])|2[0-3]):[0-5][0-9])$', startup[1]) is None:
                    pymsgbox.rootWindowPosition = '420x110+450+150'
                    time_error = pymsgbox.confirm(f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è –ß–ß:–ú–ú >>> '
                                                  f'{startup[1]}\n', '–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è ‚ò¢‚ò¢‚ò¢',
                                                  ['–°–æ—Ä—è–Ω!'])
                if date_error != '–°–æ—Ä—è–Ω!' and time_error != '–°–æ—Ä—è–Ω!':
                    start = startup[0] + 'T' + startup[1] + ':00'
            else:
                break

            while True:
                if new == 1:
                    end = pymsgbox.prompt('<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                          f'‚Æö –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è <{evn}> –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n'
                                          f'–ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú', '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è :))',
                                          default=startup[0] + ' ' + startup[1])
                elif new == 0:
                    end = pymsgbox.prompt('<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n'
                                          f'‚Æö –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è <{evn._name}> –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n'
                                          f'–ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú', '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è :))',
                                          default=evn._dates[1].split('T')[0] + ' ' + evn._dates[1].split('T')[1][:-3])
                if not end is None:
                    end = end.split(' ')
                    if not re.search('^([0-9][0-9]|19[0-9][0-9]|20[0-9][0-9])'
                                     '(\\|.|-|_|/)([1-9]|0[1-9]|1[0-2])'
                                     '(\\|.|-|_|/)([1-9]|0[1-9]|1[0-9]|2[0-9]|3[0-1])$', end[0]) is None:
                        end[0] = end[0].replace('.', '-').replace('\\', '-').replace('/', '-').replace('_', '-')
                    else:
                        pymsgbox.rootWindowPosition = '420x110+450+150'
                        date_error = pymsgbox.confirm(f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –ì–ì–ì–ì-–ú–ú-–î–î >>> '
                                                      f'{end[0]}\n', '–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è ‚ò¢‚ò¢‚ò¢',
                                                      ['–°–æ—Ä—è–Ω!'])
                    if re.search('^((([0-1][0-9])|2[0-3]):[0-5][0-9])$', end[1]) is None:
                        pymsgbox.rootWindowPosition = '420x110+450+150'
                        time_error = pymsgbox.confirm(f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –ß–ß:–ú–ú >>> '
                                                      f'{end[1]}\n', '–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è ‚ò¢‚ò¢‚ò¢',
                                                      ['–°–æ—Ä—è–Ω!'])
                    if date_error != '–°–æ—Ä—è–Ω!' and time_error != '–°–æ—Ä—è–Ω!':
                        end = end[0] + 'T' + end[1] + ':00'
                else:
                    break

                while True:
                    if new == 1:
                        per = pymsgbox.prompt(f'{''.join([''.join([i[0], ' - ', i[1][0], '\n'])
                                                          for i in EVN._specs.items()])}\n'
                                      '<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n\n'
                                      f'‚Æö –í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è —Å–æ–±—ã—Ç–∏—è <{evn}> '
                                      '–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∏—Å–ª–∞ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, '
                                      '(–≥–¥–µ –ü–ï–†–í–ê–Ø —Ü–∏—Ñ—Ä–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è, '
                                      '–∞ –°–õ–ï–î–£–Æ–©–ò–ï –∑–∞ –Ω–µ–π —Ü–∏—Ñ—Ä—ã —É–∫–∞–∑—ã–≤–∞—é—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –≤ –¥–∞–Ω–Ω–æ–º –ø–µ—Ä–∏–æ–¥–µ, '
                                      '–Ω–µ —á–∞—â–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞ –≤ –º–∏–Ω—É—Ç—É)\n'
                                      '‚Æö –í–≤–µ–¥–∏—Ç–µ 0 –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏',
                                      '–í–≤–æ–¥ —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è :))')
                    elif new == 0:
                        per = pymsgbox.prompt(f'{''.join([''.join([i[0], ' - ', i[1][0], '\n'])
                                                          for i in EVN._specs.items()])}\n'
                                      '<–°–≤–∞–ª–∏—Ç—å!> –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª\n\n'
                                      f'‚Æö –í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è —Å–æ–±—ã—Ç–∏—è <{evn._name}> '
                                      '–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∏—Å–ª–∞ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, '
                                      '(–≥–¥–µ –ü–ï–†–í–ê–Ø —Ü–∏—Ñ—Ä–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è, '
                                      '–∞ –°–õ–ï–î–£–Æ–©–ò–ï –∑–∞ –Ω–µ–π —Ü–∏—Ñ—Ä—ã —É–∫–∞–∑—ã–≤–∞—é—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –≤ –¥–∞–Ω–Ω–æ–º –ø–µ—Ä–∏–æ–¥–µ, '
                                      '–Ω–µ —á–∞—â–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞ –≤ –º–∏–Ω—É—Ç—É)\n'
                                      '‚Æö –í–≤–µ–¥–∏—Ç–µ 0 –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ :))',
                                      '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏—è :))', default=evn._period)

                    try:
                        pymsgbox.rootWindowPosition = '420x115+450+150'
                        if per is None: break
                        elif int(per[1:]) not in range(EVN._specs[per[0]][1] + 1):
                            per_error = pymsgbox.confirm(f'–ß–∏—Å–ª–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –ø—Ä–µ–≤—ã—à–∞–µ—Ç 1 —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É >>> {per[1:]}\n',
                                                         f'–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π ‚ò¢‚ò¢‚ò¢',
                                                         ['–°–æ—Ä—è–Ω!'])
                        else:
                            if new == 1:
                                Interface.add_event(uid, cln, evn, descript, start, end, per)
                                add_conf = pymsgbox.confirm(f'–°–æ–±—ã—Ç–∏–µ <{evn}> –≤–Ω–µ—Å–µ–Ω–æ –≤ {CLR._specs[cln][1]} '
                                                            f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {login}\n',
                                                            f'–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è üíòüíòüíò',
                                                            ['–£—Ä–∞-–£—Ä–∞!'])
                                break
                            elif new == 0:
                                evn._name = name
                                evn._descript = descript
                                evn._start = start
                                evn._end = end
                                evn._period = per
                                ref_conf = pymsgbox.confirm(f'–°–æ–±—ã—Ç–∏–µ <{evn._name}> {CLR._specs[cln][2]} '
                                                            f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {login} –æ–±–Ω–æ–≤–ª–µ–Ω–æ\n',
                                                            f'–ù–µ–ø–æ–ø—Ä–∞–≤–∏–º—ã–µ —É–ª—É—á—à–µ–Ω–∏—è {CLR._specs[cln][2]}',
                                                            ['–û–∫–µ–π –Ω–∞!'])
                                break
                    except:
                        per_error = pymsgbox.confirm(f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π >>> {per}\n',
                                                     f'–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π ‚ò¢‚ò¢‚ò¢',
                                                     ['–°–æ—Ä—è–Ω!'])
                break
            break

